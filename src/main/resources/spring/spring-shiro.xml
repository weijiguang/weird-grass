<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
">
   
    <description>Shiro安全配置</description>

    <!-- 自定义shiro的realm数据库身份验证 -->
    <bean id="myJpaRealm" class="net.ili.grass.services.authority.IliJpaRealm">
        <!--<property name="userDao" ref="userDao"/>-->
        <property name="authorizationCacheName" value="shiroAuthorizationCache" />
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <!--    
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml"/>
    </bean>
    -->
    <!-- shiro 的缓存管理,使用spring的ehCacheManagerFactory,
     操作spring缓存工厂来及时更新shiro的缓存管理
    ehCacheManagerFactory对象在spring-main.xml中配置 -->
        
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
        <property name="cacheManager" ref="ehCacheManagerFactory" />
    </bean>
    
    
    <!-- 使用默认的WebSecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- realm认证和授权,从数据库读取资源 -->
        <property name="realm" ref="myJpaRealm" />
        <!-- cacheManager,集合spring缓存工厂 -->
        <property name="cacheManager" ref="cacheManager" />
        <!--<property name="rememberMeManager" ref="customRememberMeManager" />-->
    </bean>
    
    <!-- 自定义对 shiro的连接约束,结合shiroSecurityFilter实现动态获取资源 -->
    <!--    
        1、URL目录是基于HttpServletRequest.getContextPath()此目录设置 
        2、URL可使用通配符，**代表任意子目录 
        3、Shiro验证URL时，URL匹配成功便不再继续匹配查找(shiro读取url是由上到下依次读取)。所以要注意配置文件中的URL顺序，尤其在使用通配符时。
    -->
    <bean id="myFilterChainDefinition" class="net.ili.grass.services.authority.MyFilterChainDefinition">
        <!-- 默认的连接配置 -->
        <property name="filterChainDefinitions">
            <value>
                /views/** = authc
                /views/organization/organization/add.xhtml = authc,perms[organization:add]
                /logout = logout
                /resource/** = anon
            </value>
        </property>
    </bean>
    
    <!-- 将shiro与spring集合 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 要求登录时的链接 -->
        <property name="loginUrl" value="/views/authority/user/login.xhtml" />
        <!-- 登陆成功后要跳转的连接 -->
        <property name="successUrl" value="/home.xhtml" />
        <!-- 未授权时要跳转的连接 -->
        <property name="unauthorizedUrl" value="/unauthorized.xhtml" />
        <property name="filters">
            <map>
                <!--<entry key="captchaAuthc" value-ref="captchaAuthenticationFilter" />-->
                <entry key="authc">
                    <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />  
                </entry>
            </map>
        </property>
        <!-- shiro连接约束配置,在这里使用自定义的动态获取资源类 -->
        <property name="filterChainDefinitionMap" ref="myFilterChainDefinition" />
    </bean>
	
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--    为安全检查使用Shiro 的注释（例如，@RequiresRoles，@RequiresPermissions 等等）。
    这需要Shiro 的Spring AOP 集成来扫描合适的注解类以及执行必要的安全逻辑。
    配置DefaultAdvisorAutoProxyCreator、AuthorizationAttributeSourceAdvisor bean-->
    <!--    <bean class="org.springframwork.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>-->
</beans>
